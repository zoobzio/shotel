name: Release

on:
  push:
    tags:
      - 'v*.*.*'

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  validate:
    name: Validate Module
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Validate go.mod
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum || (echo "go.mod/go.sum need updating" && exit 1)

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Run linting
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.8
          args: --config=.golangci.yml --timeout=5m

  release:
    name: Create Release
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: .dist/
          retention-days: 7

  verify:
    name: Verify Release
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get release tag
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Verify module can be fetched
        run: |
          sleep 30  # Wait for module proxy to update
          cd $(mktemp -d)
          go mod init test
          go get github.com/zoobzio/shotel@${{ steps.get_tag.outputs.TAG }}

      - name: Release summary
        run: |
          echo "### ðŸŽ‰ Release ${{ steps.get_tag.outputs.TAG }} Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Installation:**" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "go get github.com/zoobzio/shotel@${{ steps.get_tag.outputs.TAG }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
